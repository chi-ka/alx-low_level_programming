# Makefile for 'school' executable

# Compiler
CC := gcc

# Source files
SRC := main.c utils.c another_file.c

# Object files
OBJ := $(SRC:.c=.o)

# Executable name
NAME := school

# Program to delete files
RM := rm -f

# Compiler flags
CFLAGS := -Wall -Werror -Wextra -pedantic

# Rule to build the executable
all: $(OBJ)
	$(CC) $^ -o $(NAME) $(CFLAGS)

# Rule to build the object files
%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)

# Rule to force recompilation of all source files
re: fclean all

# Rule to delete Emacs and Vim temporary files along with the executable and object files
clean:
	$(RM) *~ $(NAME) $(OBJ)

# Rule to delete object files
oclean:
	$(RM) $(OBJ)

# Rule to delete Emacs and Vim temporary files, the executable, and object files
fclean: clean

# Ensure that the header file m.h is present
$(OBJ): m.h

# PHONY targets to ensure the rules are always executed
.PHONY: all clean oclean fclean re

